# Good example on how to use Env & Arg and how to overwrite then 
# Build : docker build --build-arg CONT_IMG_VER=v2.0.1 . -> echo "v2.0.1"
# Build : docker build . -> echo "v1.0.0"

FROM ubuntu
ARG CONT_IMG_VER
ENV CONT_IMG_VER=${CONT_IMG_VER:-v1.0.0}
RUN echo $CONT_IMG_VER


# Example that doesn't work : $ docker build --build-arg CONT_IMG_VER=v2.0.1 .
# FROM ubuntu
# ARG CONT_IMG_VER
# ENV CONT_IMG_VER=v1.0.0
# RUN echo $CONT_IMG_VER
# In this case, the RUN instruction uses v1.0.0 instead of the ARG setting passed by the user:v2.0.1 
# This behavior is similar to a shell script where a locally scoped variable overrides the variables passed as arguments 
# or inherited from environment, from its point of definition.


